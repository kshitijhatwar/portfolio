[
  {
    "bookName": "Role of CNI in Kubernetes",
    "coverImage": "./assets/images/book-covers/ThingsNoOneTaughtUsAboutLove.jpg",
    "publishYear": "2025",
    "genre": "Kubernetes",
    "quotes": [
      "Explained in details about Role of CNI in Kubernetes"
    ]
  },
  {
    "bookName": "End-to-End Kubernetes Deployment on AWS Using KOPS: Scalable, Cloud-Native Application Hosting",
    "coverImage": "./assets/images/book-covers/1_n4wdXvU_GCDvAoLCkG.jpg",
    "publishYear": "2025",
    "genre": "Kubernetes, AWS, KOPS, DNS, Nginx",
    "quotes": [
      "In this blog, I walk through the process of deploying a full-stack application on Amazon Web Services (AWS) using Kubernetes (K8s) and KOPS (Kubernetes Operations). The deployment focuses purely on infrastructure and orchestration using native Kubernetes [KOPS]. This setup offers a highly scalable, production-like environment that leverages AWS resources, Ingress-based routing, and DNS configuration via Route 53."
    ]
  },
  {
    "bookName": "Hosting an Application with Docker Compose.",
    "coverImage": "./assets/images/book-covers/1_W_IM9hVdcSxXCFqdJW9xyQ.jpg",
    "publishYear": "2025",
    "genre": "Docker, DockerCompose, ",
    "dateOfCompletion": "2025-06-08",
    "quotes": [
      "Hosted an application using Docker Compose by containerizing a multi-tier Java-based web application. Created and deployed custom Docker images for the application, MySQL database, and load balancer. Integrated official RabbitMQ and Memcached images to support messaging and caching functionalities. Used Docker Compose to orchestrate and manage multi-container services for efficient local development and deployment."
    ]
  },
  {
    "bookName": "Argo CD Multicluster Deployment of Two different Applications Using a Hub Spoke Model.",
    "coverImage": "./assets/images/book-covers/1_SYOm3TksrU3Tue4q-gyDEg.jpg",
    "publishYear": "2024",
    "genre": "Kubernetes, EKS, ArgoCD, ",
    "quotes": [
      "I have deployed two separate applications onto two distinct clusters. First, we will create a cluster and install Argo CD on it, followed by deploying an application to this cluster. Next, we will set up another cluster, connect it to the same Argo CD, and deploy a different application to the new cluster."
    ]
  },
  {
    "bookName": "Docker CLI Commands",
    "coverImage": "./assets/images/book-covers/0_KzGPFWGxD3-KLhvn.jpg",
    "publishYear": "2024",
    "genre": "Docker",
    "quotes": [
      "In today’s dynamic development environment, Docker has become a crucial tool for developers and DevOps Engineers. Its ability to package applications into containers ensures consistency from development to deployment. Proficiency with Docker’s CLI commands is essential for managing containers, images, and networks effectively. Here’s a comprehensive guide to the essential Docker commands you need to know."
    ]
  },
  {
    "bookName": " CI-CD Pipeline",
    "coverImage": "./assets/images/book-covers/1_QuITXabmkPEw92R7kmNQpQ.jpg",
    "publishYear": "2024",
    "genre": "Jenkins, Docker, Linux, AWS, Maven, Sonarqube, Nexus",
    "dateOfCompletion": "2024-04-08",
    "quotes": [
      "I have built a pipeline that begins by pulling code from GitHub. Next, Maven compiles the code and runs unit tests. The code is then sent to SonarQube for a quality check. If the code quality passes, Maven builds the project, and the resulting artifact is deployed to Sonatype Nexus. Following this, a Docker image is created and pushed to DockerHub. Finally, the Docker image is pulled and run on a web server."
    ]
  },
  {
    "bookName": "Deployment of Docker Container to webserver using Jenkins Pipeline",
    "coverImage": "./assets/images/book-covers/1_OI0dYPIrn85og4Gn7NNyfg.jpg",
    "publishYear": "2024",
    "genre": "Jenkins, Docker",
    "quotes": [
      "This project aims to automate the process of building docker container from a Docker image, pushing it to docker hub, and deploying container to a web server using Jenkins and Git Hub."
    ]
  }
]